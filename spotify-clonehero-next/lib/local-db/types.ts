/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type {ColumnType} from 'kysely';

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export interface SpotifyAlbums {
  artist_name: string;
  id: string;
  name: string;
  total_tracks: Generated<number>;
  updated_at: string;
}

export interface SpotifyAlbumTracks {
  album_id: string;
  track_id: string;
  updated_at: string;
}

export interface ChorusCharts {
  md5: string;
  name: string;
  artist: string;
  charter: string;
  diff_drums: number | null;
  diff_guitar: number | null;
  diff_bass: number | null;
  diff_keys: number | null;
  diff_drums_real: number | null;
  modified_time: string;
  song_length: number | null;
  has_video_background: boolean;
  album_art_md5: string | null;
  group_id: number;
}

export interface ChorusScanSessions {
  id: number;
  session_id: string;
  status: 'in_progress' | 'completed' | 'failed' | 'cancelled';
  started_at: string;
  completed_at: string | null;
  total_songs_to_fetch: number | null;
  total_songs_found: number | null;
  total_charts_found: number | null;
  last_chart_id: number | null;
  error_message: string | null;
  created_at: string;
}

export interface ChorusMetadata {
  key: string;
  value: string;
  updated_at: string;
}

export interface SpotifyPlaylists {
  collaborative: Generated<number>;
  id: string;
  name: string;
  owner_display_name: string;
  owner_external_url: string;
  snapshot_id: string;
  total_tracks: Generated<number>;
  updated_at: string;
}

export interface SpotifyPlaylistTracks {
  playlist_id: string;
  track_id: string;
}

export interface SpotifyTracks {
  artist: string;
  id: string;
  name: string;
  updated_at: string;
}

export interface DB {
  spotify_album_tracks: SpotifyAlbumTracks;
  spotify_albums: SpotifyAlbums;
  spotify_playlist_tracks: SpotifyPlaylistTracks;
  spotify_playlists: SpotifyPlaylists;
  spotify_tracks: SpotifyTracks;
  chorus_charts: ChorusCharts;
  chorus_scan_sessions: ChorusScanSessions;
  chorus_metadata: ChorusMetadata;
}
